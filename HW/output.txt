keyword	int	2	1
indentifer	inzamam	2	5
oparetor	(	2	12
keyword	int	2	13
indentifer	che	2	17
oparetor	)	2	20
keyword	int	4	1
indentifer	main	4	5
oparetor	(	4	9
oparetor	)	4	10
oparetor	{	5	1
keyword	int	6	5
indentifer	n	6	9
oparetor	=	6	10
integer	8	6	12
oparetor	+	6	13
integer	3	6	14
oparetor	;	6	15
keyword	if	8	5
oparetor	(	8	7
indentifer	n	8	8
oparetor	>	8	9
integer	0	8	11
oparetor	)	8	12
oparetor	{	8	13
indentifer	n	9	9
oparetor	=	9	10
integer	4	9	11
oparetor	;	9	12
indentifer	printf	10	9
oparetor	(	10	15
string	P	10	17
oparetor	)	10	19
oparetor	;	10	20
oparetor	}	11	5
keyword	if	12	5
oparetor	(	12	7
indentifer	n	12	8
oparetor	>=	12	10
integer	0	12	13
oparetor	)	12	14
oparetor	{	12	15
indentifer	n	13	9
oparetor	=	13	10
float	4.0	13	11
oparetor	;	13	14
indentifer	printf	14	9
oparetor	(	14	15
string	P	14	17
oparetor	)	14	19
oparetor	;	14	20
oparetor	}	15	5
keyword	if	16	5
oparetor	(	16	22
indentifer	n	16	24
oparetor	>	16	25
integer	0	16	27
oparetor	)	16	28
oparetor	{	16	29
indentifer	n	17	9
oparetor	=	17	10
integer	4	17	11
oparetor	;	17	12
indentifer	printf	18	9
oparetor	(	18	15
string	P	18	17
oparetor	)	18	19
oparetor	;	18	20
oparetor	}	19	5
keyword	if	20	5
oparetor	(	20	8
indentifer	n	20	9
oparetor	==	20	10
integer	0	20	12
oparetor	)	20	13
oparetor	{	20	14
indentifer	printf	21	9
oparetor	(	21	15
string	N	21	17
oparetor	)	21	19
oparetor	;	21	20
oparetor	}	22	5
keyword	else	24	5
keyword	if	24	10
oparetor	(	24	12
indentifer	n	24	13
oparetor	>=	24	15
integer	0	24	18
oparetor	)	24	19
oparetor	{	24	20
indentifer	n	25	9
oparetor	=	25	10
integer	4	25	11
oparetor	;	25	12
indentifer	printf	26	9
oparetor	(	26	15
string	P	26	17
oparetor	)	26	19
oparetor	;	26	20
oparetor	}	27	5
keyword	else	28	5
keyword	if	28	10
oparetor	(	28	27
indentifer	n	28	29
oparetor	>	28	30
integer	0	28	32
oparetor	)	28	33
oparetor	{	28	34
indentifer	n	28	35
oparetor	=	28	36
integer	4	28	37
oparetor	;	28	38
indentifer	printf	29	9
oparetor	(	29	15
string	P	29	17
oparetor	)	29	19
oparetor	;	29	20
indentifer	n	30	9
oparetor	=	30	10
integer	5	30	11
oparetor	;	30	12
oparetor	}	31	5
keyword	else	32	5
keyword	if	32	10
oparetor	(	32	13
indentifer	n	32	14
oparetor	==	32	15
integer	0	32	17
oparetor	)	32	18
oparetor	{	32	19
indentifer	printf	32	21
oparetor	(	32	27
string	N	32	29
oparetor	)	32	31
oparetor	;	32	32
oparetor	}	32	33
keyword	else	34	5
oparetor	{	34	9
indentifer	printf	35	9
oparetor	(	35	15
string	Z	35	17
oparetor	)	35	19
oparetor	;	35	20
oparetor	}	36	5
keyword	return	38	5
integer	0	38	12
oparetor	;	38	13
oparetor	}	39	1
